// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  BLOCKED
  DECLINED
}

model User {
  id                    String       @id @default(uuid())
  name                  String
  username              String       @unique
  email                 String       @unique
  hashPassword          String
  // who sent the message and to whom
  sentMessage           Message[]    @relation("MessageSender")
  receivedMessage       Message[]    @relation("MessageReceiver")
  // who sent a friend request and to whom
  sendFriendRequest     Friendship[] @relation("FriendshipSender")
  receivedFriendRequest Friendship[] @relation("FriendshipReceiver")
  posts                 Posts[]
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
}

model Friendship {
  id         String           @id @default(uuid())
  status     FriendshipStatus @default(PENDING)
  receiverId String
  senderId   String
  sender     User             @relation("FriendshipSender", fields: [senderId], references: [id])
  receiver   User             @relation("FriendshipReceiver", fields: [receiverId], references: [id])

  @@unique([senderId, receiverId])
}

model Message {
  id         String   @id @default(uuid())
  receiverId String
  senderId   String
  content    String
  sender     User     @relation("MessageSender", fields: [senderId], references: [id])
  receiver   User     @relation("MessageReceiver", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())
}

model Posts {
  id        String   @id @default(uuid())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
